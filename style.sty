variable {
    primary = sampleColor(1.0, "rgb")
    secondary = sampleColor(1.0, "rgb")
}

forall Graph A
{
    A.icon = Circle {
        strokeWidth: 0.0
        color: rgba(0.0, 0.0, 0.0, 0.0)
    }

    A.text = Text{
        string: A.label
    }

    A.level = 0

    ensure minSize(A.icon)
    ensure maxSize(A.icon)
    ensure contains(A.icon, A.text)
    ensure contains(A.icon, A.text)

    A.text above A.icon
}

forall Variable V
{
    V.icon = Line {
        color: rgba(0.0, 0.0, 0.0, 0.0)
    }
}

forall Variable V; Graph A; Graph B where some(V, A, B)
{
    override V.icon.start = A.text.center
    override V.icon.end = B.text.center
    override V.icon.color = rgba(0.0, 0.0, 0.0, 1.0)

    V.icon above A.text
    V.icon above B.text
}

forall Graph A; Graph B; Graph Result 
where Result := or(A, B) 
{
    override A.icon.color = variable.primary
    override B.icon.color = variable.primary

    override Result.level = A.level + 1

    Result.icon2 = Circle {
        strokeWidth: 0.0
        center: Result.icon.center
        r: Result.icon.r - 1.0
        color: selectColor(variable.primary, variable.secondary, Result.level)
    }

    override Result.text = Circle{
        strokeWidth: 0.0
        r : 0.0
    }

    ensure smallerThan(A.icon, Result.icon)
    ensure smallerThan(B.icon, Result.icon)
    ensure contains(Result.icon2, A.icon, 5.0)
    ensure contains(Result.icon2, B.icon, 5.0)
    ensure disjoint(A.icon, B.icon)

    A.icon above Result.icon2
    B.icon above Result.icon2
}

forall Graph A; Graph B; Graph Result 
where Result := if(A, B) 
{
    override Result.level = A.level + 1

    override Result.icon = Circle{
        strokeWidth: 0.0
        color: selectColor(variable.primary, variable.secondary, Result.level)
    }

    override Result.icon2 = Circle{
        strokeWidth: 0.0
        color: selectColor(variable.primary, variable.secondary, Result.level + 1)
    }

    override Result.text.string = "."

    override Result.icon2.r = Result.icon.r / 1.6

    ensure outsideOf(A.text, Result.icon2)
    ensure contains(Result.icon, A.text)
    ensure contains(Result.icon2, B.text)

    ensure maxSize(Result.icon)
    ensure minSize(Result.icon)
    ensure maxSize(Result.icon2)
    ensure minSize(Result.icon2)
    ensure contains(Result.icon, Result.icon2, 5.0)

    ensure contains(Result.icon2, B.icon, 5.0)


    Result.icon2 above Result.icon

}